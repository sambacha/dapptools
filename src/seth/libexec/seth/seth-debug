#!/usr/bin/env bash
### seth-debug -- debug a transaction in hevm interactive
### Usage: seth debug <tx-hash> [<options>]
###
### Runs all the transactions in the block to get the correct state
### then executes the given transaction in debug mode
###
### Unless `--no-src` is given, source code for the `to` address
### will be passed along to hevm for better debugging xp
set -e

state=$(TMPDIR=. mktemp -d hevm.libs.XXXXX -p /tmp)

export GIT_CONFIG_NOSYSTEM=1
export GIT_AUTHOR_NAME=hevm
export GIT_AUTHOR_EMAIL=hevm@dapphub.com
export GIT_COMMITTER_NAME=$GIT_AUTHOR_NAME
export GIT_COMMITTER_EMAIL=$GIT_AUTHOR_EMAIL
gitopts=(-q --no-verify --no-gpg-sign --allow-empty -m "dapp test")
(
	cd "$state" || exit
	git init -q && git add . && git commit "${gitopts[@]}"
)

targetTx=$(seth tx "$1")

# TODO: scary rm -rf
tidy() {
	[[ "$SRCDIR" ]] && rm -rf "$SRCDIR"
	rm -rf "$state"
}
trap tidy SIGINT SIGTERM

if [[ -z "$SETH_NOSRC" ]]; then
	echo >&2 "${0##*/}: info: fetching contract source from etherscan..."
	SRCDIR=$(TMPDIR=. mktemp -d seth.debug.XXXX -p /tmp)
	if seth bundle-source "$(seth <<<"$targetTx" --field to)" --dir "$SRCDIR" >"$SRCDIR"/standard.json; then
		opts=(--source "$SRCDIR"/standard.json)
	else
		echo >&2 "${0##*/}: warning: no source available"
	fi
fi

index="$(seth <<<"$targetTx" --field transactionIndex)"
block=$(seth block "$(seth <<<"$targetTx" --field blockNumber)" --full)
txs=($(seth <<<"$block" --field transactions | seth --show-json))
timestamp="$(seth <<<"$block" --field timestamp)"

j=0
for i in "${txs[@]}"; do
	tx=$(seth <<<"$i" --show-json)
	hash=$(seth <<<"$tx" --field hash)

	if [[ "$1" = "$hash" ]]; then
		echo -e "\r${0##*/}: info: transaction ($j/$index)" >&2
		seth run-tx "$tx" --state "$state" --debug "${opts[@]}"
		tidy
		break
	else
		[[ $SETH_VERBOSE ]] &&
			echo -e "\r${0##*/}: info: transaction ($j/$index)" >&2 ||
			echo -en "\r${0##*/}: info: transaction ($j/$index)" >&2
		# exit code 2 means REVERT or otherwise acceptable failure
		seth run-tx "$tx" --state "$state" --timestamp "$timestamp" >/dev/null ||
			[[ $? == 2 ]] ||
			(
				tidy
				echo ""
				seth --fail "${0##*/}: error: hevm error while executing tx: $hash"
			)
		j=$((j + 1))
	fi
done
