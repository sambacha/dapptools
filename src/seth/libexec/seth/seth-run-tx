#!/usr/bin/env bash
### seth-run-tx -- execute a transaction using hevm
### Usage: seth run-tx <tx-hash> [<options>]
### or:    seth run-tx <tx-info> [<options>]
###
### Run a transaction with hevm in the environment of the given transaction.
###
### With `--state dir`, load and save state from `dir`
### With `--trace`, print the call trace of the transaction.
### With `--debug`, execute with hevm's interactive debugger
set -e

# if the argument begins with 0x, we assume it to be a tx hash
# otherwise, we assume that it contains the result of a seth tx call
if [[ $1 = 0x* ]]; then
	tx=$(seth tx "$1")
elif [[ $1 = blockHash* ]]; then
	tx=$1
else
	seth --fail "${0##*/}: malformed transaction hash or data: $1"
fi

TO=$(seth <<<"$tx" --field to)
DATA=$(seth <<<"$tx" --field input | seth --to-hex)
if [[ "$TO" == 'null' ]]; then
	opts+=(--create --code "$DATA")
else
	opts+=(--address "$TO" --calldata "$DATA")
fi

opts+=(--caller "$(seth <<<"$tx" --field from)")
opts+=(--origin "$(seth <<<"$tx" --field from)")
opts+=(--value "$(seth <<<"$tx" --field value)")
opts+=(--gas "$(seth <<<"$tx" --field gas)")
opts+=(--nonce "$(seth <<<"$tx" --field nonce)")
opts+=(--number "$(seth <<<"$tx" --field blockNumber)")
opts+=(--block "$(("$(seth <<<"$tx" --field blockNumber)" - 1))")
opts+=(--rpc "${ETH_RPC_URL}")
opts+=(--timestamp "${HEVM_TIMESTAMP:-$(seth block "$(seth <<<"$tx" --field blockNumber)" timestamp)}")
opts+=(--chainid "${ETH_CHAINID:-$(seth rpc eth_chainId | seth --to-dec)}")

[[ "$HEVM_STATE" ]] && opts+=(--state "$HEVM_STATE")
[[ "$HEVM_DEBUG" ]] && opts+=(--debug)
[[ "$HEVM_TRACE" ]] && opts+=(--trace)
[[ "$DAPP_JSON" ]] && opts+=(--json-file "$DAPP_JSON")

(
	[[ $SETH_VERBOSE ]] && set -x
	hevm exec "${opts[@]}"
)
