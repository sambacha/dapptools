#!/usr/bin/env bash
### dapp-debug -- run unit tests interactively (hevm)
### Usage: dapp debug [<options>]
###
### Options:
###   --rpc                 fetch remote state via ETH_RPC_URL
###   --rpc-url=<url>       fetch remote state via <url>
###   --rpc-block=<number>  block number (latest if not specified)

set -e

have() { command -v "$1" >/dev/null; }
have hevm || {
	echo >&2 "${0##*/}: error: The hevm executable was not found in \$PATH."
	echo >&2 "${0##*/}: error: See https://dapp.tools for installation instructions."
	exit 1
}

opts=$(dapp --hevm-opts "$0" "$@")

# Link libraries by default.
export DAPP_LINK_TEST_LIBRARIES=${DAPP_LINK_TEST_LIBRARIES-1}

cd "$DAPP_ROOT"
(
	set -x
	dapp build || exit
)

# Make a state dir for linked libraries if needed.

if [ "$DAPP_LINK_TEST_LIBRARIES" = 1 ]; then
	state=$(dapp --make-library-state)
	opts+=("--state ${state}")
	function clean() { rm -rf "$state"; }
	trap clean EXIT
fi

# Make sure we know which JSON file to target.

shopt -s nullglob
shopt -s globstar
jsons=("$DAPP_OUT"/**/*.sol.json)
if [[ "${#jsons[@]}" -gt 1 ]]; then
	if [[ "$#" -gt 0 ]]; then
		target="$1"
		shift
	else
		echo >&2 "${0##*/}: There are multiple compilation outputs:"
		echo >&2 "${0##*/}:"
		echo >&2 "${0##*/}:   ${jsons[*]}"
		echo >&2 "${0##*/}:"
		echo >&2 "${0##*/}: Choose one like this:"
		echo >&2 "${0##*/}:   $ dapp debug ${jsons[0]}"
		echo >&2 "${0##*/}:"
		exit 1
	fi
elif [[ "${#jsons[@]}" -eq 1 ]]; then
	target="${jsons[0]}"
elif [[ "${#jsons[@]}" -eq 0 ]]; then
	echo >&2 "${0##*/}: error: No compilation outputs; nothing to debug."
fi

# shellcheck disable=SC2068
(
	set -x
	hevm dapp-test --debug --dapp-root="$DAPP_ROOT" --json-file="$target" ${opts[@]}
)
